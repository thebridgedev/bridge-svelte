name: "Sync Docs to GitLab (Bridge Web)"
description: "Syncs /learning folder to bridge-web GitLab repo using a sync-docs branch."
runs:
  using: "composite"

  steps:
    - name: üßæ Checkout repository
      uses: actions/checkout@v4

    - name: üîê Setup SSH for GitLab
      shell: bash
      run: |
        set -e
        
        # Create SSH directory with proper permissions
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Write SSH key with proper formatting
        echo "$DOCS_SYNC_SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Add GitLab to known hosts
        ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        
        # Start SSH agent and add key
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        
        # Test SSH connection
        echo "üîç Testing SSH connection to GitLab..."
        ssh -T git@gitlab.com || echo "‚ö†Ô∏è SSH test completed (expected for GitLab)"
        
        echo "‚úÖ SSH setup completed"

    - name: üß† Sync /learning folder to Bridge Web (sync-docs branch)
      shell: bash
      run: |
        set -e

        REPO_NAME=$(basename "${{ github.repository }}")
        GITLAB_REPO="git@gitlab.com:nebulrgroup/bridge/bridge-web.git"
        SYNC_BRANCH="sync-docs/$REPO_NAME"

        echo "üîÑ Syncing /learning content from $REPO_NAME ‚Üí $GITLAB_REPO ($SYNC_BRANCH)"
        
        # Verify SSH key is loaded
        echo "üîç Verifying SSH key is loaded..."
        ssh-add -l || echo "‚ö†Ô∏è No SSH keys loaded in agent"
        
        # Test GitLab connectivity before cloning
        echo "üîç Testing GitLab connectivity..."
        ssh -o ConnectTimeout=10 -T git@gitlab.com || echo "‚ö†Ô∏è SSH test completed (expected for GitLab)"

        echo "üì• Cloning repository..."
        git clone "$GITLAB_REPO"
        cd bridge-web

        git config user.name "Docs Sync Bot"
        git config user.email "docs.bot@nebulr.dev"

        TARGET_PATH="bridge-docs/synced/$REPO_NAME"
        mkdir -p "$TARGET_PATH"

        # Remove old synced content for this plugin
        rm -rf "$TARGET_PATH"/* || true

        # Copy new content
        cp -r ../learning/* "$TARGET_PATH"/ || true
        if [ -f ../README.md ]; then cp ../README.md "$TARGET_PATH/index.md"; fi

        git add .

        if git diff --cached --quiet; then
          echo "‚úÖ No new documentation changes to sync."
          exit 0
        fi

        git commit -m "Sync learning docs from $REPO_NAME@${{ github.sha }}" || true

        echo "üß© Preparing sync branch $SYNC_BRANCH..."
        git fetch origin $SYNC_BRANCH || true
        git checkout -B $SYNC_BRANCH

        echo "‚öôÔ∏è Rebasing on latest origin/$SYNC_BRANCH (if exists)..."
        if git show-ref --quiet refs/remotes/origin/$SYNC_BRANCH; then
          if ! git rebase origin/$SYNC_BRANCH; then
            echo "‚ö†Ô∏è Rebase conflict detected ‚Äî aborting and retrying with merge strategy."
            git rebase --abort || true
            git pull --rebase=false --strategy-option ours origin $SYNC_BRANCH || true
          fi
        fi

        echo "üöÄ Pushing updates to GitLab branch $SYNC_BRANCH..."
        if ! git push origin HEAD:$SYNC_BRANCH; then
          echo "‚ö†Ô∏è Initial push failed ‚Äî pulling latest and retrying once."
          git pull --rebase=false origin $SYNC_BRANCH || true
          git push origin HEAD:$SYNC_BRANCH || echo "‚ùå Push still failed, manual review needed."
        fi

        echo "‚úÖ Sync complete for $REPO_NAME ‚Üí $GITLAB_REPO@$SYNC_BRANCH"

