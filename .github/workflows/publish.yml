name: Build and Publish

on:
  push:
    branches: [ "**" ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bridge-svelte
    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üîß Setup and Build
        uses: ./.github/actions/setup-and-build
        with:
          working-directory: bridge-svelte

      # - name: üß™ Tests (optional)
      #   run: |
      #     if bun run | grep -q " test"; then
      #       bun test
      #     else
      #       echo "No test script found; skipping tests."
      #     fi

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bridge-svelte
    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üîß Setup and Build (frozen)
        uses: ./.github/actions/setup-and-build
        with:
          working-directory: bridge-svelte

      - name: üõë Pre-publish validation
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Git Tag: ${{ github.ref_name }}, Package Version: $PACKAGE_VERSION"
          if [ "v${PACKAGE_VERSION}" != "${{ github.ref_name }}" ]; then
            echo "‚ùå package.json version ($PACKAGE_VERSION) does not match tag (${{ github.ref_name }})" && exit 1
          fi
          PUBLISHED_VERSIONS=$(npm view @nebulr-group/bridge-svelte versions --json || true)
          if echo "$PUBLISHED_VERSIONS" | grep -q "\"$PACKAGE_VERSION\""; then
            echo "‚ùå Version $PACKAGE_VERSION already published to npm" && exit 1
          else
            echo "‚úÖ Version $PACKAGE_VERSION is new; proceeding"
          fi

      - name: üöÄ Publish to npm (with provenance)
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ‚ú® Create GitHub Release
        run: |
          gh release create "${{ github.ref_name }}" \
            --title "Release ${{ github.ref_name }}" \
            --notes "This release was automatically published from CI."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  sync_docs:
    needs: publish
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main'
    uses: ./.github/actions/sync-docs.yml
    secrets: inherit


